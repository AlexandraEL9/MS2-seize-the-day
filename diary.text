- add file structure- basic

- boilerplate and dependencies/libraries/links

-add navbar from bootstrap

- basic html completed and checked inc modals and footer

JS date/time update

learning from freeCodeCamp https://www.freecodecamp.org/news/how-to-format-dates-in-javascript/
// Function to update the date and time every minute
function updateTimeContinuously() {
    updateDateTime();
    setInterval(updateDateTime, 60000);//update every minute
}
was updating but not on the minute in line with actual 
time so when checked with testing so changed to update 
every second

// Function to update the date and time every minute
function updateTimeContinuously() {
    updateDateTime();
    setInterval(updateDateTime, 1000);//update every second
}

---clock


------pommodoro
link
https://webdesign.tutsplus.com/create-a-pomodoro-timer-with-html-css-and-vanilla-javascript--cms-108069t
and 
https://www.youtube.com/watch?app=desktop&v=MtYR2vCs2R0


debugging of pomodoro timer
from this
document
        .getElementById("short-break")
        .addEventListener("click", function () {
          hideAll();

          short.style.display = "block";
          currentTimer = short;
        });
      document
        .getElementById("long-break")
        .addEventListener("click", function () {
          hideAll();

          long.style.display = "block";
          currentTimer = long;
        });
to this
document.getElementById("short-break").addEventListener("click", function () {
    hideAll();
    short.style.display = "block";
    currentTimer = document.getElementById("short-timer"); // Set currentTimer to the actual timer display element
    startTimer(currentTimer); // Start the timer for short break
});

document.getElementById("long-break").addEventListener("click", function () {
    hideAll();
    long.style.display = "block";
    currentTimer = document.getElementById("long-timer"); // Set currentTimer to the actual timer display element
    startTimer(currentTimer); // Start the timer for long break
});

passed correct timer display element to'startTimer' function


modified start timer so carry on from current interval- not just start a new one

from thisfunction startTimer(timerdisplay) {
   if (myInterval) {
     clearInterval(myInterval);
   }
to this
function startTimer(timerdisplay) {
  if (myInterval) {
    // If there's already an active interval, do nothing
    return;


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seize the Day</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="assets/css/styles.css">
</head>

<body>
    <nav class="navbar">
        <span class="navbar-brand">Seize the Day</span>
    </nav>
    <header>
        <div class="container-fluid">
            <div class="row">
                <!-- Title and Description Section -->
                <div class="col-lg-6 col-md-6">
                    <section class="content-section content-section-title-description">
                        <h1>Seize the Day</h1>
                        <p>Your productivity companion to help you manage tasks and time effectively.</p>
                    </section>
                </div>
                <!-- Current Date and Time Display Section -->
                <div class="col-lg-6 col-md-6">
                    <section class="content-section content-section-date-time">
                        <h2 id="currentDate"></h2>
                        <div id="clockDisplay"></div>
                    </section>
                </div>
            </div>
        </div>
    </header>

    <main class="container-fluid container-main">
        <div class="row justify-content-center row-main">
            <!-- To-Do List Section -->
            <section class="todo-section col-lg-6 col-md-6 col-sm-12">
                <h3>To-Do List</h3>
                <div class="input-group">
                    <input type="text" id="taskInput" placeholder="Enter task" class="form-control">
                    <div class="input-group-append">
                        <button id="addTaskBtn" class="btn">Add Task</button>
                    </div>
                </div>
                <ul id="taskList" class="list-group"></ul>
                <button id="clearListBtn" class="btn">Clear List</button>
            </section>

            <!-- Pomodoro Timer and Reminder Section -->
            <section class="col-lg-6 col-md-6 col-sm-12">
                <div class="row">
                    <!-- Pomodoro Timer Section -->
                    <div class="timer-section col-12">
                        <h3>Pomodoro Timer</h3>
                        <div class="button-container">
                            <button class="button btn" id="pomodoro-session">Pomodoro</button>
                            <button class="button btn" id="short-break">Short Break</button>
                            <button class="button btn" id="long-break">Long Break</button>
                        </div>
                        <div class="timer-display">
                            <span id="minutes">25</span>:<span id="seconds">00</span>
                        </div>
                        <button id="startTimerBtn" class="btn">Start</button>
                    </div>
                    <!-- Reminder Section -->
<section class="reminder-section col-12">
    <h3>Set Reminder</h3>
    <div class="input-group">
        <input type="time" id="reminderTime" class="form-control">
        <input type="text" id="reminderMessage" class="form-control" placeholder="Reminder message...">
        <div class="input-group-append">
            <button id="setReminderBtn" class="btn">Set Reminder</button>
        </div>
    </div>
    <ul id="reminderList" class="list-group-item justify-content-center"></ul> <!-- Corrected class -->
</section>


                    
        </div>
    </main>

    <!--modals-->
    <div class="modal" id="pomodoroOverModal" tabindex="-1" aria-labelledby="pomodoroOverModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="pomodoroOverModalLabel">Time's Up!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Your pomodoro focus session is finished. Time to take a break.</p>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="shortBreakOverModal" tabindex="-1" aria-labelledby="shortBreakOverModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="shortBreakOverModalLabel">Time's Up!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Your 5-minute break time is over. Time to get focused for another pomodoro session.</p>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="longBreakOverModal" tabindex="-1" aria-labelledby="longBreakOverModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="longBreakOverModalLabel">Time's Up!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Your 15-minute break time is over. Time to get focused for another pomodoro session.</p>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="reminderModal" tabindex="-1" aria-labelledby="reminderModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reminderModalLabel">Reminder</h5>
                    <button type="button btn" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><!--populated at input--></p>
                </div>
            </div>
        </div>
    </div>

    <!--footer-->
    <footer class="footer">
        <div class="container container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <button id="toggleDarkModeBtn" class="btn">Dark Mode</button>
                </div>
            </div>
        </div>
    </footer>

    <!--alarm sound-->
    <audio id="alarmSound" src="calm-alarm.wav" preload="auto"></audio>

    <!-- JavaScript -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"></script>
    <script src="script.js"></script>
</body>

</html>

body {
    background-color: whitesmoke;
    color: darkslategrey;
    width: 100%;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}
.dark-mode body {
    background-color: #333;
    color: whitesmoke;
}
.dark-mode .navbar {
    background-color: #333;
    color: #ffffff;
}

/*navbar*/
.navbar {
    background-color: white;
    color: darkslategrey;
    border-bottom: 1px solid whitesmoke;
}
.navbar-brand {
    color: darkslategrey;
    font-weight: bolder;
}
.dark-mode .navbar-brand {
    color: whitesmoke;
    font-weight: bolder;
}
.dark-mode .navbar {
    background-color: black;
    color: whitesmoke;
    border-bottom: 2px solid darkslategrey;
}

/*header styles*/
header {
    background-color: whitesmoke;
    border-bottom: 1px solid whitesmoke;
    padding: 20px;
}
.dark-mode header {
    background-color: #333;
    border-bottom: 2px solid darkslategrey;
    padding: 20px;
}
.content-section-title-description {
    text-align: left;
}
.content-section-date-time {
    text-align: right;
}
.content-section h1,
.content-section h2 {
    color: darkslategrey;
}
.dark-mode .content-section h1,
.dark-mode .content-section h2,
.dark-mode p {
    color: whitesmoke;
}
#clockDisplay {
    font-size: 2em;
    font-weight: light;
    color: darkslategrey;
}
.dark-mode #clockDisplay {
    font-size: 2em;
    font-weight: light;
    color: whitesmoke;
}

/* Main Content Styles */
main {
    padding: 20px 0;
    flex-grow: 1;
}
.container-main {
    display: flex;
    justify-content: center;
    align-items: center;
}
.dark-mode .container-main {
    background-color: black;
}

.row-main {
    display: flex;
    justify-content: space-between;
    width: 100%;
}

.todo-section,
.timer-section,
.reminder-section {
    background-color: white;
    border: 1px solid darkslategray;
    padding: 15px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    text-align: center;
}
.dark-mode .todo-section,
.dark-mode .timer-section,
.dark-mode .reminder-section {
    background-color: #333;
    border: 2px solid darkslategray;
    padding: 15px;
    border-radius: 5px;
    text-align: center;
}

.todo-section h3,
.timer-section h3,
.reminder-section h3 {
    color: darkslategray;
    border-bottom: 1px solid darkslategray;
    padding-bottom: 10px;
    margin-bottom: 15px;
}
.dark-mode .todo-section h3,
.dark-mode .timer-section h3,
.dark-mode .reminder-section h3 {
    color: whitesmoke;
    border-bottom: 1px solid darkslategray;
    padding-bottom: 10px;
    margin-bottom: 15px;
}

/* Styles for the button containers and btn/ buttons */
.button-container {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
}

.button {
    background-color: whitesmoke;
    color: darkslategrey;
    border: 1px solid slategrey;
    margin: 5px;
}
.dark-mode .button {
    background-color: darkslategrey;
    color: whitesmoke;
    border: 1px solid slategrey;
    margin: 5px;
}

.button:hover {
    background-color: darkslategray;
    color: whitesmoke;
}
.dark-mode .button:hover {
    background-color: slategray;
    color: whitesmoke;
}

.btn {
    background-color: whitesmoke;
    color: darkslategrey;
    border: 1px solid slategrey;
}
.dark-mode .btn {
    background-color: darkslategrey;
    color: whitesmoke;
    border: 1px solid slategrey;
}

.btn:hover {
    background-color: darkslategray;
    color: whitesmoke;
}
.dark-mode .btn:hover {
    background-color: slategray;
    color: whitesmoke;
}

/* inputs and lists styling */
.input-group {
    margin-bottom: 20px;
}
input {
    margin-bottom: 10px;
}
.dark-mode input {
    margin-bottom: 10px;
    background-color: #333;
    color: slategrey;
}
.list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
}
.dark-mode .list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: black;
    color: whitesmoke;
    border: 1px solid whitesmoke;
    margin-bottom: 10px;
}
.list-group-item.complete {
    text-decoration: line-through;
}

/* pomodoro section */
/* Timer display styling */
.timer-display {
    font-size: 2em;
    font-weight: bold;
    color: darkslategray;
    text-align: center;
    margin-bottom: 20px;
}
.dark-mode .timer-display {
    font-size: 2em;
    font-weight: bold;
    color: whitesmoke;
    text-align: center;
    margin-bottom: 20px;
}

/* Reminder list styling */
#reminderList {
    list-style: none;
    padding: 0;
}

#reminderList .list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: white;
    color: darkslategrey;
    margin-bottom: 10px;
    border-radius: 5px;
}

.dark-mode #reminderList .list-group-item {
    background-color: black;
    color: whitesmoke;
    border: 1px solid whitesmoke;
    margin-bottom: 10px;
    padding: 10px; /* Added padding for better visibility */
}

/* footer styles */
footer {
    background-color: #ffffff;
    width: 100vw;
    padding: 10px 0;
    border-top: 1px solid darkslategrey;
}
.dark-mode footer {
    background-color: black;
    width: 100vw;
    padding: 10px 0;
    border-top: 2px solid darkslategrey;
}

/* modal styles */
.modal-content {
    background-color: whitesmoke;
    color: darkslategrey;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}
.dark-mode .modal-content {
    background-color: #333;
    color: whitesmoke;
    box-shadow: 0 2px 10px rgba(255, 255, 255, 0.1);
}
.modal-dialog {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
}
.modal-header {
    border-bottom: 1px solid darkslategrey;
    display: flex;
    justify-content: center;
    align-items: center;
}

.dark-mode .modal-header {
    border-bottom: 2px solid whitesmoke;
}

.modal-title {
    font-weight: bold;
}

.close {
    color: darkslategrey;
}
.dark-mode .close {
    color: whitesmoke;
}
.modal-body {
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}
.modal-body p {
    color: darkslategrey;
}
.dark-mode .modal-body p {
    color: whitesmoke;
}